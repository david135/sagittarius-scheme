diff -ruN gc-7.2/dyn_load.c gc-7.2.qnx/dyn_load.c
--- gc-7.2/dyn_load.c	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/dyn_load.c	2013-09-21 13:42:34.158631800 +0200
@@ -63,7 +63,7 @@
     !(defined(FREEBSD) && defined(__ELF__)) && \
     !(defined(OPENBSD) && (defined(__ELF__) || defined(M68K))) && \
     !(defined(NETBSD) && defined(__ELF__)) && !defined(HURD) && \
-    !defined(DARWIN) && !defined(CYGWIN32)
+    !defined(DARWIN) && !defined(CYGWIN32) && !defined(QNX)
  --> We only know how to find data segments of dynamic libraries for the
  --> above.  Additional SVR4 variants might not be too
  --> hard to add.
@@ -76,6 +76,13 @@
 #   include <link.h>
 #endif
 
+#ifdef QNX
+#   include <sys/elf.h>
+#   include <sys/link.h>
+#   include <dlfcn.h>
+#   define HAVE_DL_ITERATE_PHDR
+#endif
+
 #if defined(NETBSD)
 #   include <sys/param.h>
 #   include <dlfcn.h>
@@ -228,7 +235,8 @@
 
 #if defined(SCO_ELF) || defined(DGUX) || defined(HURD) \
     || (defined(__ELF__) && (defined(LINUX) || defined(FREEBSD) \
-                             || defined(NETBSD) || defined(OPENBSD)))
+                             || defined(NETBSD) || defined(OPENBSD) \
+			     || defined(QNX)))
 
 #ifdef USE_PROC_FOR_LIBRARIES
 
@@ -621,11 +629,11 @@
 #   ifndef PF_W
 #     define PF_W       2
 #   endif
-# elif !defined(PLATFORM_ANDROID)
+# elif !defined(PLATFORM_ANDROID) && !defined(QNX)
 #  include <elf.h>
 # endif
 
-# ifndef PLATFORM_ANDROID
+# if !defined(PLATFORM_ANDROID) && !defined(QNX)
 #   include <link.h>
 # endif
 
diff -ruN gc-7.2/include/gc_config_macros.h gc-7.2.qnx/include/gc_config_macros.h
--- gc-7.2/include/gc_config_macros.h	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/include/gc_config_macros.h	2013-09-21 13:38:24.027325100 +0200
@@ -68,7 +68,8 @@
     || defined(GC_IRIX_THREADS) || defined(GC_LINUX_THREADS) \
     || defined(GC_NETBSD_THREADS) || defined(GC_OPENBSD_THREADS) \
     || defined(GC_OSF1_THREADS) || defined(GC_SOLARIS_THREADS) \
-    || defined(GC_WIN32_THREADS) || defined(GC_RTEMS_PTHREADS)
+    || defined(GC_WIN32_THREADS) || defined(GC_RTEMS_PTHREADS) \
+    || defined(GC_QNX_THREADS)
 # ifndef GC_THREADS
 #   define GC_THREADS
 # endif
diff -ruN gc-7.2/include/private/gcconfig.h gc-7.2.qnx/include/private/gcconfig.h
--- gc-7.2/include/private/gcconfig.h	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/include/private/gcconfig.h	2013-09-21 13:40:27.678397600 +0200
@@ -43,6 +43,33 @@
 #   define LINUX
 # endif
 
+/* for BB10 support */
+# if defined(__QNX__)
+#  if defined(__arm__)
+#    define ARM32
+     extern int __data_start[];
+#    define DATASTART ((ptr_t)__data_start)
+     extern char _end[];
+#    define DATAEND ((ptr_t)(&_end))
+#  else
+/* for simulator */
+#    define I386
+     extern char etext[];
+#    define DATASTART ((ptr_t)(etext))
+     extern int _end[];
+#    define DATAEND (_end)
+#  endif
+/* common things */
+#  define QNX
+#  define OS_TYPE "QNX"
+#  define SA_RESTART 0
+#  define HEURISTIC2
+#  define USE_MMAP
+#  define USE_MMAP_ANON
+#  define DYNAMIC_LOADING
+#  define mach_type_known
+# endif
+
 /* And one for NetBSD: */
 # if defined(__NetBSD__)
 #    define NETBSD
@@ -73,7 +100,8 @@
 # if defined(__arm) || defined(__arm__) || defined(__thumb__)
 #    define ARM32
 #    if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD) \
-        && !defined(DARWIN) && !defined(_WIN32) && !defined(__CEGCC__)
+        && !defined(DARWIN) && !defined(_WIN32) && !defined(__CEGCC__) \
+        && !defined(QNX)
 #      define NOSYS
 #      define mach_type_known
 #    endif
@@ -2404,7 +2432,7 @@
 #if defined(SVR4) || defined(LINUX) || defined(IRIX5) || defined(HPUX) \
     || defined(OPENBSD) || defined(NETBSD) || defined(FREEBSD) \
     || defined(DGUX) || defined(BSD) || defined(HURD) \
-    || defined(AIX) || defined(DARWIN) || defined(OSF1)
+    || defined(AIX) || defined(DARWIN) || defined(OSF1) || defined(QNX)
 # define UNIX_LIKE      /* Basic Unix-like system calls work.   */
 #endif
 
@@ -2482,7 +2510,8 @@
 
 #if ((defined(UNIX_LIKE) && (defined(DARWIN) || defined(HURD) \
                              || defined(OPENBSD) || defined(ARM32) \
-                             || defined(MIPS) || defined(AVR32))) \
+                             || defined(MIPS) || defined(AVR32)	   \
+			     || defined(QNX)))			   \
      || (defined(LINUX) && (defined(SPARC) || defined(M68K))) \
      || (defined(RTEMS) && defined(I386))) && !defined(NO_GETCONTEXT)
 # define NO_GETCONTEXT
@@ -2568,6 +2597,9 @@
     && !defined(MSWINCE)
 # error --> inconsistent configuration
 #endif
+#if defined(GC_QNX_THREADS) && !defined(QNX)
+# error --> inconsistent configuration
+#endif
 
 #if defined(PCR) || defined(GC_WIN32_THREADS) || defined(GC_PTHREADS) \
     || defined(SN_TARGET_PS3)
diff -ruN gc-7.2/include/private/thread_local_alloc.h gc-7.2.qnx/include/private/thread_local_alloc.h
--- gc-7.2/include/private/thread_local_alloc.h	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/include/private/thread_local_alloc.h	2013-09-21 13:38:24.128330900 +0200
@@ -47,7 +47,8 @@
 #   define USE_COMPILER_TLS
 # elif defined(GC_DGUX386_THREADS) || defined(GC_OSF1_THREADS) \
        || defined(GC_DARWIN_THREADS) || defined(GC_AIX_THREADS) \
-       || defined(GC_NETBSD_THREADS) || defined(GC_RTEMS_PTHREADS)
+       || defined(GC_NETBSD_THREADS) || defined(GC_RTEMS_PTHREADS) \
+       || defined(GC_QNX_THREADS)
 #   define USE_PTHREAD_SPECIFIC
 # elif defined(GC_HPUX_THREADS)
 #   ifdef __GNUC__
diff -ruN gc-7.2/os_dep.c gc-7.2.qnx/os_dep.c
--- gc-7.2/os_dep.c	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/os_dep.c	2013-09-21 13:38:24.184334100 +0200
@@ -98,6 +98,7 @@
 #endif
 
 #if defined(LINUX) || defined(FREEBSD) || defined(SOLARIS) || defined(IRIX5) \
+        || defined(QNX)							\
         || ((defined(USE_MMAP) || defined(USE_MUNMAP)) \
         && !defined(MSWIN32) && !defined(MSWINCE))
 # define MMAP_SUPPORTED
@@ -828,10 +829,12 @@
     typedef void (*GC_fault_handler_t)(int);
 
 #   if defined(SUNOS5SIGS) || defined(IRIX5) || defined(OSF1) \
-       || defined(HURD) || defined(NETBSD)
+       || defined(HURD) || defined(NETBSD) \
+       || defined(QNX)
         static struct sigaction old_segv_act;
 #       if defined(_sigargs) /* !Irix6.x */ || defined(HPUX) \
-           || defined(HURD) || defined(NETBSD) || defined(FREEBSD)
+           || defined(HURD) || defined(NETBSD) || defined(FREEBSD)\
+           || defined(QNX)
             static struct sigaction old_bus_act;
 #       endif
 #   else
@@ -841,7 +844,8 @@
     GC_INNER void GC_set_and_save_fault_handler(GC_fault_handler_t h)
     {
 #       if defined(SUNOS5SIGS) || defined(IRIX5) \
-           || defined(OSF1) || defined(HURD) || defined(NETBSD)
+           || defined(OSF1) || defined(HURD) || defined(NETBSD) \
+           || defined(QNX)
           struct sigaction act;
 
           act.sa_handler = h;
@@ -863,7 +867,7 @@
             (void) sigaction(SIGSEGV, &act, &old_segv_act);
 #           if defined(IRIX5) && defined(_sigargs) /* Irix 5.x, not 6.x */ \
                || defined(HPUX) || defined(HURD) || defined(NETBSD) \
-               || defined(FREEBSD)
+               || defined(FREEBSD) || defined(QNX)
               /* Under Irix 5.x or HP/UX, we may get SIGBUS.    */
               /* Pthreads doesn't exist under Irix 5.x, so we   */
               /* don't have to worry in the threads case.       */
@@ -901,11 +905,12 @@
     GC_INNER void GC_reset_fault_handler(void)
     {
 #       if defined(SUNOS5SIGS) || defined(IRIX5) \
-           || defined(OSF1) || defined(HURD) || defined(NETBSD)
+           || defined(OSF1) || defined(HURD) || defined(NETBSD) \
+           || defined(QNX)
           (void) sigaction(SIGSEGV, &old_segv_act, 0);
 #         if defined(IRIX5) && defined(_sigargs) /* Irix 5.x, not 6.x */ \
              || defined(HPUX) || defined(HURD) || defined(NETBSD) \
-             || defined(FREEBSD)
+             || defined(FREEBSD) || defined(QNX)
               (void) sigaction(SIGBUS, &old_bus_act, 0);
 #         endif
 #       else
@@ -1371,6 +1376,31 @@
 # define HAVE_GET_STACK_BASE
 #endif /* GC_RTEMS_PTHREADS */
 
+#if defined (GC_QNX_THREADS)
+
+#  include <pthread.h>
+  GC_API int GC_CALL GC_get_stack_base(struct GC_stack_base *b)
+  {
+    pthread_attr_t attr;
+    size_t size;
+    if (pthread_attr_init(&attr) == 0) {
+      if (pthread_attr_getstack(&attr, &b->mem_base, &size) == 0) {
+	pthread_attr_destroy(&attr);
+	if (GC_print_stats == VERBOSE) {
+	  GC_log_printf("Stack base address %p\n", b->mem_base);
+	}
+	return GC_SUCCESS;
+      }
+      pthread_attr_destroy(&attr);
+    }
+    WARN("pthread_attr_init or pthread_attr_getstack failed"
+	 " for main thread\n", 0);
+    return GC_UNIMPLEMENTED;
+  }
+# define HAVE_GET_STACK_BASE
+#endif
+
+
 #ifndef HAVE_GET_STACK_BASE
   /* Retrieve stack base.                                               */
   /* Using the GC_find_limit version is risky.                          */
diff -ruN gc-7.2/pthread_support.c gc-7.2.qnx/pthread_support.c
--- gc-7.2/pthread_support.c	2012-08-09 22:25:13.000000000 +0200
+++ gc-7.2.qnx/pthread_support.c	2013-09-21 13:38:24.214335800 +0200
@@ -935,6 +935,10 @@
                                         ptr_t *startp, ptr_t *endp);
 #endif
 
+#ifdef GC_QNX_THREADS
+# include <sys/syspage.h>
+#endif
+
 /* We hold the allocation lock. */
 GC_INNER void GC_thr_init(void)
 {
@@ -1012,6 +1016,8 @@
       GC_nprocs = GC_get_nprocs();
 #   elif defined(GC_RTEMS_PTHREADS)
       GC_nprocs = 1; /* not implemented */
+#   elif defined(GC_QNX_THREADS)
+      GC_nprocs = _syspage_ptr->num_cpu;
 #   endif
   }
   if (GC_nprocs <= 0) {
