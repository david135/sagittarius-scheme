;; -*- Scheme -*-
;; do not edit! this file was automatically generated by gen-instruction.scm.
(define-constant NOP 0)
(define-constant HALT 1)
(define-constant UNDEF 2)
(define-constant CONST 3)
(define-constant CONSTI 4)
(define-constant LREF 5)
(define-constant LSET 6)
(define-constant FREF 7)
(define-constant FSET 8)
(define-constant GREF 9)
(define-constant GSET 10)
(define-constant PUSH 11)
(define-constant BOX 12)
(define-constant UNBOX 13)
(define-constant ADD 14)
(define-constant ADDI 15)
(define-constant SUB 16)
(define-constant SUBI 17)
(define-constant MUL 18)
(define-constant MULI 19)
(define-constant DIV 20)
(define-constant DIVI 21)
(define-constant NEG 22)
(define-constant TEST 23)
(define-constant JUMP 24)
(define-constant SHIFTJ 25)
(define-constant MARK 26)
(define-constant BNNUME 27)
(define-constant BNLT 28)
(define-constant BNLE 29)
(define-constant BNGT 30)
(define-constant BNGE 31)
(define-constant BNEQ 32)
(define-constant BNEQV 33)
(define-constant BNNULL 34)
(define-constant NOT 35)
(define-constant NUM_EQ 36)
(define-constant NUM_LT 37)
(define-constant NUM_LE 38)
(define-constant NUM_GT 39)
(define-constant NUM_GE 40)
(define-constant RECEIVE 41)
(define-constant CLOSURE 42)
(define-constant APPLY 43)
(define-constant CALL 44)
(define-constant LOCAL_CALL 45)
(define-constant TAIL_CALL 46)
(define-constant LOCAL_TAIL_CALL 47)
(define-constant RET 48)
(define-constant FRAME 49)
(define-constant LET_FRAME 50)
(define-constant POP_LET_FRAME 51)
(define-constant DISPLAY 52)
(define-constant ENTER 53)
(define-constant LEAVE 54)
(define-constant DEFINE 55)
(define-constant LIBRARY 56)
(define-constant CAR 57)
(define-constant CDR 58)
(define-constant CONS 59)
(define-constant LIST 60)
(define-constant APPEND 61)
(define-constant VALUES 62)
(define-constant EQ 63)
(define-constant EQV 64)
(define-constant NULLP 65)
(define-constant PAIRP 66)
(define-constant SYMBOLP 67)
(define-constant VECTOR 68)
(define-constant VECTORP 69)
(define-constant VEC_LEN 70)
(define-constant VEC_REF 71)
(define-constant VEC_SET 72)
(define-constant LREF_PUSH 73)
(define-constant FREF_PUSH 74)
(define-constant GREF_PUSH 75)
(define-constant CONST_PUSH 76)
(define-constant CONSTI_PUSH 77)
(define-constant GREF_CALL 78)
(define-constant GREF_TAIL_CALL 79)
(define-constant SET_CAR 80)
(define-constant SET_CDR 81)
(define-constant CAAR 82)
(define-constant CADR 83)
(define-constant CDAR 84)
(define-constant CDDR 85)
(define-constant CAR_PUSH 86)
(define-constant CDR_PUSH 87)
(define-constant CONS_PUSH 88)
(define-constant LREF_CAR 89)
(define-constant LREF_CDR 90)
(define-constant FREF_CAR 91)
(define-constant FREF_CDR 92)
(define-constant GREF_CAR 93)
(define-constant GREF_CDR 94)
(define-constant LREF_CAR_PUSH 95)
(define-constant LREF_CDR_PUSH 96)
(define-constant FREF_CAR_PUSH 97)
(define-constant FREF_CDR_PUSH 98)
(define-constant GREF_CAR_PUSH 99)
(define-constant GREF_CDR_PUSH 100)
(define-constant INSTRUCTION_COUNT 101)
(define (lookup-insn-name insn)
  (cond
    ((eqv? insn 0) '(NOP 0 0 #f #f))
    ((eqv? insn 1) '(HALT 0 0 #f #f))
    ((eqv? insn 2) '(UNDEF 0 0 #f #f))
    ((eqv? insn 3) '(CONST 0 1 #f #f))
    ((eqv? insn 4) '(CONSTI 1 0 #f #f))
    ((eqv? insn 5) '(LREF 1 0 #t #f))
    ((eqv? insn 6) '(LSET 1 0 #t #f))
    ((eqv? insn 7) '(FREF 1 0 #t #f))
    ((eqv? insn 8) '(FSET 1 0 #t #f))
    ((eqv? insn 9) '(GREF 0 1 #t #f))
    ((eqv? insn 10) '(GSET 0 1 #t #f))
    ((eqv? insn 11) '(PUSH 0 0 #f #f))
    ((eqv? insn 12) '(BOX 1 0 #f #f))
    ((eqv? insn 13) '(UNBOX 0 0 #f #f))
    ((eqv? insn 14) '(ADD 0 0 #t #f))
    ((eqv? insn 15) '(ADDI 1 0 #t #f))
    ((eqv? insn 16) '(SUB 0 0 #t #f))
    ((eqv? insn 17) '(SUBI 1 0 #t #f))
    ((eqv? insn 18) '(MUL 0 0 #t #f))
    ((eqv? insn 19) '(MULI 1 0 #t #f))
    ((eqv? insn 20) '(DIV 0 0 #t #f))
    ((eqv? insn 21) '(DIVI 1 0 #t #f))
    ((eqv? insn 22) '(NEG 0 0 #t #f))
    ((eqv? insn 23) '(TEST 0 1 #t #t))
    ((eqv? insn 24) '(JUMP 0 1 #t #t))
    ((eqv? insn 25) '(SHIFTJ 2 0 #f #f))
    ((eqv? insn 26) '(MARK 0 0 #f #f))
    ((eqv? insn 27) '(BNNUME 0 1 #t #t))
    ((eqv? insn 28) '(BNLT 0 1 #t #t))
    ((eqv? insn 29) '(BNLE 0 1 #t #t))
    ((eqv? insn 30) '(BNGT 0 1 #t #t))
    ((eqv? insn 31) '(BNGE 0 1 #t #t))
    ((eqv? insn 32) '(BNEQ 0 1 #t #t))
    ((eqv? insn 33) '(BNEQV 0 1 #t #t))
    ((eqv? insn 34) '(BNNULL 0 1 #t #t))
    ((eqv? insn 35) '(NOT 0 0 #f #f))
    ((eqv? insn 36) '(NUM_EQ 0 0 #t #f))
    ((eqv? insn 37) '(NUM_LT 0 0 #t #f))
    ((eqv? insn 38) '(NUM_LE 0 0 #t #f))
    ((eqv? insn 39) '(NUM_GT 0 0 #t #f))
    ((eqv? insn 40) '(NUM_GE 0 0 #t #f))
    ((eqv? insn 41) '(RECEIVE 2 0 #t #f))
    ((eqv? insn 42) '(CLOSURE 0 1 #f #f))
    ((eqv? insn 43) '(APPLY 2 0 #f #f))
    ((eqv? insn 44) '(CALL 1 0 #t #f))
    ((eqv? insn 45) '(LOCAL_CALL 1 0 #t #f))
    ((eqv? insn 46) '(TAIL_CALL 1 0 #t #f))
    ((eqv? insn 47) '(LOCAL_TAIL_CALL 1 0 #t #f))
    ((eqv? insn 48) '(RET 0 0 #f #f))
    ((eqv? insn 49) '(FRAME 0 1 #f #t))
    ((eqv? insn 50) '(LET_FRAME 1 0 #t #f))
    ((eqv? insn 51) '(POP_LET_FRAME 2 0 #f #f))
    ((eqv? insn 52) '(DISPLAY 1 0 #f #f))
    ((eqv? insn 53) '(ENTER 1 0 #f #f))
    ((eqv? insn 54) '(LEAVE 1 0 #f #f))
    ((eqv? insn 55) '(DEFINE 1 1 #t #f))
    ((eqv? insn 56) '(LIBRARY 0 1 #f #f))
    ((eqv? insn 57) '(CAR 0 0 #t #f))
    ((eqv? insn 58) '(CDR 0 0 #t #f))
    ((eqv? insn 59) '(CONS 0 0 #t #f))
    ((eqv? insn 60) '(LIST 1 0 #t #f))
    ((eqv? insn 61) '(APPEND 1 0 #t #f))
    ((eqv? insn 62) '(VALUES 1 0 #t #f))
    ((eqv? insn 63) '(EQ 0 0 #t #f))
    ((eqv? insn 64) '(EQV 0 0 #t #f))
    ((eqv? insn 65) '(NULLP 0 0 #t #f))
    ((eqv? insn 66) '(PAIRP 0 0 #t #f))
    ((eqv? insn 67) '(SYMBOLP 0 0 #t #f))
    ((eqv? insn 68) '(VECTOR 1 0 #t #f))
    ((eqv? insn 69) '(VECTORP 0 0 #t #f))
    ((eqv? insn 70) '(VEC_LEN 0 0 #t #f))
    ((eqv? insn 71) '(VEC_REF 0 0 #t #f))
    ((eqv? insn 72) '(VEC_SET 0 0 #t #f))
    ((eqv? insn 73) '(LREF_PUSH 1 0 #t #f))
    ((eqv? insn 74) '(FREF_PUSH 1 0 #t #f))
    ((eqv? insn 75) '(GREF_PUSH 0 1 #t #f))
    ((eqv? insn 76) '(CONST_PUSH 0 1 #f #f))
    ((eqv? insn 77) '(CONSTI_PUSH 1 0 #f #f))
    ((eqv? insn 78) '(GREF_CALL 1 1 #t #f))
    ((eqv? insn 79) '(GREF_TAIL_CALL 1 1 #t #f))
    ((eqv? insn 80) '(SET_CAR 0 0 #t #f))
    ((eqv? insn 81) '(SET_CDR 0 0 #t #f))
    ((eqv? insn 82) '(CAAR 0 0 #t #f))
    ((eqv? insn 83) '(CADR 0 0 #t #f))
    ((eqv? insn 84) '(CDAR 0 0 #t #f))
    ((eqv? insn 85) '(CDDR 0 0 #t #f))
    ((eqv? insn 86) '(CAR_PUSH 0 0 #t #f))
    ((eqv? insn 87) '(CDR_PUSH 0 0 #t #f))
    ((eqv? insn 88) '(CONS_PUSH 0 0 #t #f))
    ((eqv? insn 89) '(LREF_CAR 1 0 #t #f))
    ((eqv? insn 90) '(LREF_CDR 1 0 #t #f))
    ((eqv? insn 91) '(FREF_CAR 1 0 #t #f))
    ((eqv? insn 92) '(FREF_CDR 1 0 #t #f))
    ((eqv? insn 93) '(GREF_CAR 0 1 #t #f))
    ((eqv? insn 94) '(GREF_CDR 0 1 #t #f))
    ((eqv? insn 95) '(LREF_CAR_PUSH 1 0 #t #f))
    ((eqv? insn 96) '(LREF_CDR_PUSH 1 0 #t #f))
    ((eqv? insn 97) '(FREF_CAR_PUSH 1 0 #t #f))
    ((eqv? insn 98) '(FREF_CDR_PUSH 1 0 #t #f))
    ((eqv? insn 99) '(GREF_CAR_PUSH 0 1 #t #f))
    ((eqv? insn 100) '(GREF_CDR_PUSH 0 1 #t #f))
    (else 'unknown)))
